@*@model IEnumerable<TripTrak.Models.ApplicationUser>*@
@model TripTrak.Models.ViewModels.FriendsViewModel

@{
    ViewData["Title"] = "Index";
}

<div class="d-flex justify-content-between align-items-center flex-wrap">
    <h1>Friends</h1>
    <div>
        <a asp-action="FriendSearch" class="btn btn-primary">Add Friend</a>
    </div>
</div>

@if (Model.ReceivedRequests.Count() > 0 || Model.SentRequests.Count() > 0)
{
<div class="request_container">
    <h5 class="pt-1">Friend Requests</h5>
    <table class="table-borderless">
        <tbody>
            @*@await Component.InvokeAsync("FriendRequests")
                @await Component.InvokeAsync("PendingRequests")*@

            @foreach (var friendship in Model.ReceivedRequests)
            {
                <tr>
                    <td>
                        @friendship.FriendA.FullName
                    </td>
                    <td class="text-center">
                        <form asp-controller="Friends" asp-action="AcceptRequest">
                            <input type="hidden" name="id" asp-for="@friendship.Id" />
                            <input type="submit" value="Accept" class="btn btn-sm btn-primary" />
                        </form>
                    </td>
                    <td class="text-right">
                        <form asp-controller="Friends" asp-action="DeleteRequest">
                            <input type="hidden" name="id" asp-for="@friendship.Id" />
                            <input type="submit" value="Ignore" class="btn btn-sm btn-cancel" />
                        </form>
                    </td>
                </tr>
            }

            @foreach (var friendship in Model.SentRequests)
            {
                <tr>
                    <td>
                        @friendship.FriendB.FullName
                    </td>
                    <td class="text-center">
                        <span class="font14"><em>Pending</em></span>
                    </td>
                    <td class="text-right">
                        <form asp-controller="Friends" asp-action="DeleteRequest">
                            <input type="hidden" name="id" asp-for="@friendship.Id" />
                            <input type="submit" value="Cancel" class="btn btn-sm btn-cancel" />
                        </form>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
}



<div class="row friends_container">
    @foreach (var friend in Model.CurrentFriends)

    {
        <div class="col-md-4">
            <div class="friend_card">
                <div class="d-flex justify-content-between">
                    <h4>
                        @Html.DisplayFor(modelItem => friend.UserName)
                    </h4>
                    <div>
                        <a asp-action="Delete" asp-route-friendId="@friend.Id" class="text-danger"><i class="fas fa-times-circle"></i></a>
                    </div>
                </div>
                @foreach (Trip trip in friend.TripList)
                {
                    <h6>
                        @trip.Name
                    </h6>
                    <div class="friends_cities d-flex align-items-center flex-wrap mb-3">
                        @foreach (City city in trip.Cities)
                        {
                            <a asp-controller="Cities" asp-action="Details" asp-route-id="@city.Id"><div>@city.Name</div></a>
                        }
                    </div>
                }
            </div>
        </div>
    }
</div>

