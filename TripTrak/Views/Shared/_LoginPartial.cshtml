@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link text-light" asp-area="" asp-controller="Trips" asp-action="Index">My Trips</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-light" asp-area="" asp-controller="SavedPlaces" asp-action="Index">Saved Places</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-light" asp-area="" asp-controller="Friends" asp-action="Index">Friends</a>
        </li>
        <li class="nav-item dropdown">
            <a class="nav-link text-light dropdown-toggle" href="#" id="navbarDropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                <i class="fas fa-user-circle"></i>&nbsp;@User.Identity.Name
            </a>
            <div class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink">
                <a class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">My Account</a>
                <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                    <button type="submit" class="dropdown-item">Logout</button>
                </form>
            </div>
        </li>
    }
</ul>